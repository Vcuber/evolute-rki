{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\OneDrive\\\\Documents\\\\GitHub\\\\evolute-rki\\\\Client\\\\src\\\\Components\\\\Login\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport logo from '../../evolutelogo.png';\nimport righti from '../../Right-Icon.png';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useState } from 'react';\nimport './LoginPage.css';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(username, password);\n    var http = new XMLHttpRequest();\n    var url = \"http://localhost:8080/api/auth/signin\";\n    var logParas = JSON.stringify({\n      \"usernameOrEmail\": username,\n      \"password\": password\n    });\n    http.open(\"POST\", url, true);\n    http.setRequestHeader(\"Content-type\", \"application/json\");\n\n    http.onreadystatechange = function () {\n      if (http.readyState === XMLHttpRequest.DONE) {\n        var status = http.status;\n\n        if (status === 0 || status >= 200 && status < 400) {\n          console.log(http.responseText);\n          const data = JSON.parse(http.responseText);\n          console.log(data.roleType);\n          localStorage.setItem(\"accessToken\", data.accessToken);\n          localStorage.setItem(\"roleType\", data.roleType);\n\n          switch (data.roleType) {\n            case \"\":\n              history.push(\"/\");\n              break;\n\n            case \"ROLE_USER\":\n              history.push(\"/User\");\n              break;\n\n            case \"ROLE_ADMIN\":\n              history.push(\"/Admin\");\n              break;\n\n            default:\n              break;\n          }\n        } else {\n          alert(\"Invalid Login\");\n        }\n      }\n    };\n\n    http.send(logParas);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"right-icon\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: righti,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginside\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"evolute-logo\",\n        src: logo,\n        alt: \"evolute-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form-main\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicUsername\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"form-labels\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Username/Email\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"form-labels\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"H4gXrCoHLhiMVNICxu+h4zBHttg=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginPage;\nexport default LoginPage; // const [username, setUsername] = useState('');\n// const [password, setPassword] = useState('');\n// const [loginStatus, setLoginStatus] = useState('');\n// Axios.defaults.withCredentials = true;\n// const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     Axios.post('http://localhost:3001/login', {\n//         username: username, \n//         password: password,\n//     }).then((response) => {\n//         if (response.data.message) {\n//             setLoginStatus(response.data.message);\n//         } else {\n//             setLoginStatus(response.data[0].fname);\n//         }\n//     });\n// };\n// useEffect(() => {\n//     Axios.get(\"http://localhost:3001/login\").then((response) => {\n//         if(response.data.loggedIn === true) {\n//             setLoginStatus(response.data.user.fname);\n//         }\n//     });\n// }, []);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/varun/OneDrive/Documents/GitHub/evolute-rki/Client/src/Components/Login/LoginPage.js"],"names":["React","logo","righti","Form","Button","useState","useHistory","LoginPage","history","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","console","log","http","XMLHttpRequest","url","logParas","JSON","stringify","open","setRequestHeader","onreadystatechange","readyState","DONE","status","responseText","data","parse","roleType","localStorage","setItem","accessToken","push","alert","send","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport logo from '../../evolutelogo.png';\r\nimport righti from '../../Right-Icon.png';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useState } from 'react';\r\nimport './LoginPage.css'; \r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(username, password);\r\n\r\n        var http = new XMLHttpRequest();\r\n        var url = \"http://localhost:8080/api/auth/signin\";\r\n        var logParas = JSON.stringify({\"usernameOrEmail\": username, \"password\": password});\r\n        http.open(\"POST\", url, true);\r\n        http.setRequestHeader(\"Content-type\", \"application/json\");\r\n        http.onreadystatechange = function() {\r\n\r\n            if(http.readyState === XMLHttpRequest.DONE) {\r\n\r\n                var status = http.status;\r\n                if(status === 0 || (status >= 200 && status < 400)) {\r\n                    console.log(http.responseText);\r\n                    const data = JSON.parse(http.responseText);\r\n                    console.log(data.roleType);\r\n                    localStorage.setItem(\"accessToken\", data.accessToken)\r\n                    localStorage.setItem(\"roleType\", data.roleType);\r\n                    switch(data.roleType) {\r\n                        case \"\":\r\n                            history.push(\"/\");\r\n                            break;\r\n                        case \"ROLE_USER\":\r\n                            history.push(\"/User\");\r\n                            break;\r\n                        case \"ROLE_ADMIN\":\r\n                            history.push(\"/Admin\");\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"Invalid Login\");\r\n                }\r\n            }\r\n        };\r\n\r\n        http.send(logParas);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div id=\"right-icon\">\r\n                <img src={righti} alt=\"\" />\r\n            </div>\r\n            <div className=\"loginside\">\r\n                <img className=\"evolute-logo\" src={logo} alt=\"evolute-logo\"/>\r\n                <hr />\r\n                <Form className=\"form-main\" onSubmit={handleSubmit}> \r\n                    <Form.Group controlId=\"formBasicUsername\">\r\n                        <Form.Label className=\"form-labels\">Username</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter Username/Email\" value={username} onChange={e => setUsername(e.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label className=\"form-labels\">Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Enter Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"submit\">\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;\r\n\r\n\r\n// const [username, setUsername] = useState('');\r\n    // const [password, setPassword] = useState('');\r\n    \r\n    // const [loginStatus, setLoginStatus] = useState('');\r\n\r\n    // Axios.defaults.withCredentials = true;\r\n\r\n    // const handleSubmit = async (e) => {\r\n    //     e.preventDefault();\r\n    //     Axios.post('http://localhost:3001/login', {\r\n    //         username: username, \r\n    //         password: password,\r\n    //     }).then((response) => {\r\n    //         if (response.data.message) {\r\n    //             setLoginStatus(response.data.message);\r\n    //         } else {\r\n    //             setLoginStatus(response.data[0].fname);\r\n    //         }\r\n    //     });\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     Axios.get(\"http://localhost:3001/login\").then((response) => {\r\n    //         if(response.data.loggedIn === true) {\r\n    //             setLoginStatus(response.data.user.fname);\r\n    //         }\r\n    //     });\r\n    // }, []);"]},"metadata":{},"sourceType":"module"}
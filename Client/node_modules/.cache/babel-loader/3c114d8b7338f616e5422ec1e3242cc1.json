{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\OneDrive\\\\Documents\\\\GitHub\\\\evolute-rki\\\\Client\\\\src\\\\Components\\\\login\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport logo from '../../evolutelogo.png';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useState } from 'react';\nimport './LoginPage.css';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(username, password);\n    var http = new XMLHttpRequest();\n    var url = \"http://localhost:8080/api/auth/signin\";\n    var logParas = JSON.stringify({\n      \"usernameOrEmail\": username,\n      \"password\": password\n    });\n    http.open(\"POST\", url, true);\n    http.setRequestHeader(\"Content-type\", \"application/json\");\n\n    http.onreadystatechange = function () {\n      if (http.ok) {\n        const data = http.responseText.json();\n        console.log(data); // switch(data.roleType) {\n        //     case \"\":\n        //         history.push(\"/\");\n        //         break;\n        //     case \"ROLE_USER\":\n        //         history.push(\"/User\");\n        //         break;\n        //     case \"ROLE_ADMIN\":\n        //         history.push(\"/Admin\");\n        //         break;\n        //     default:\n        //         break;\n      }\n    };\n\n    http.send(logParas);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"evolute-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form-main\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicUsername\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"form-labels\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"form-labels\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"H4gXrCoHLhiMVNICxu+h4zBHttg=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginPage;\nexport default LoginPage; // const [username, setUsername] = useState('');\n// const [password, setPassword] = useState('');\n// const [loginStatus, setLoginStatus] = useState('');\n// Axios.defaults.withCredentials = true;\n// const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     Axios.post('http://localhost:3001/login', {\n//         username: username, \n//         password: password,\n//     }).then((response) => {\n//         if (response.data.message) {\n//             setLoginStatus(response.data.message);\n//         } else {\n//             setLoginStatus(response.data[0].fname);\n//         }\n//     });\n// };\n// useEffect(() => {\n//     Axios.get(\"http://localhost:3001/login\").then((response) => {\n//         if(response.data.loggedIn === true) {\n//             setLoginStatus(response.data.user.fname);\n//         }\n//     });\n// }, []);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/varun/OneDrive/Documents/GitHub/evolute-rki/Client/src/Components/login/LoginPage.js"],"names":["React","logo","Form","Button","useState","useHistory","LoginPage","history","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","console","log","http","XMLHttpRequest","url","logParas","JSON","stringify","open","setRequestHeader","onreadystatechange","ok","data","responseText","json","send","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport logo from '../../evolutelogo.png'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useState } from 'react';\r\nimport './LoginPage.css'; \r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(username, password);\r\n\r\n        var http = new XMLHttpRequest();\r\n        var url = \"http://localhost:8080/api/auth/signin\";\r\n        var logParas = JSON.stringify({\"usernameOrEmail\": username, \"password\": password});\r\n        http.open(\"POST\", url, true);\r\n        http.setRequestHeader(\"Content-type\", \"application/json\");\r\n        http.onreadystatechange = function() {\r\n            if(http.ok) {\r\n                const data = http.responseText.json();\r\n                console.log(data);\r\n                // switch(data.roleType) {\r\n                //     case \"\":\r\n                //         history.push(\"/\");\r\n                //         break;\r\n                //     case \"ROLE_USER\":\r\n                //         history.push(\"/User\");\r\n                //         break;\r\n                //     case \"ROLE_ADMIN\":\r\n                //         history.push(\"/Admin\");\r\n                //         break;\r\n                //     default:\r\n                //         break;\r\n                }\r\n        }\r\n\r\n        http.send(logParas);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <img src={logo} alt=\"evolute-logo\"/>\r\n            <hr />\r\n            <Form className=\"form-main\" onSubmit={handleSubmit}> \r\n                <Form.Group controlId=\"formBasicUsername\">\r\n                    <Form.Label className=\"form-labels\">Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" value={username} onChange={e => setUsername(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label className=\"form-labels\">Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;\r\n\r\n\r\n// const [username, setUsername] = useState('');\r\n    // const [password, setPassword] = useState('');\r\n    \r\n    // const [loginStatus, setLoginStatus] = useState('');\r\n\r\n    // Axios.defaults.withCredentials = true;\r\n\r\n    // const handleSubmit = async (e) => {\r\n    //     e.preventDefault();\r\n    //     Axios.post('http://localhost:3001/login', {\r\n    //         username: username, \r\n    //         password: password,\r\n    //     }).then((response) => {\r\n    //         if (response.data.message) {\r\n    //             setLoginStatus(response.data.message);\r\n    //         } else {\r\n    //             setLoginStatus(response.data[0].fname);\r\n    //         }\r\n    //     });\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     Axios.get(\"http://localhost:3001/login\").then((response) => {\r\n    //         if(response.data.loggedIn === true) {\r\n    //             setLoginStatus(response.data.user.fname);\r\n    //         }\r\n    //     });\r\n    // }, []);"]},"metadata":{},"sourceType":"module"}
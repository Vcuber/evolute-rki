{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\OneDrive\\\\Documents\\\\GitHub\\\\evolute-rki\\\\Client\\\\src\\\\Components\\\\Admin\\\\Dashboard\\\\SignupPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Toast from 'react-bootstrap/Toast';\nimport './SignupPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SignupPage() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [fullname, setFullname] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [registered, setRegistered] = useState(false);\n  const [showToast, setShowToast] = useState(true);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    var xhr = new XMLHttpRequest();\n    var url = \"http://localhost:8080/api/auth/signup\";\n    var logParas = JSON.stringify({\n      \"name\": fullname,\n      \"username\": username,\n      \"email\": email,\n      \"password\": password\n    });\n    xhr.open(\"POST\", url, true);\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === xhr.DONE) {\n        var status = xhr.status;\n\n        if (status === 0 || status >= 200 && status < 400) {\n          setRegistered(true);\n        } else {\n          alert(\"Cannot register user\");\n        }\n      }\n    };\n\n    xhr.send(logParas);\n  };\n\n  const toastToggle = () => {\n    setShowToast(!showToast);\n    setRegistered(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      bg: \"dark\",\n      delay: \"5000\",\n      show: showToast,\n      onClose: toastToggle,\n      style: {\n        position: \"fixed\",\n        top: 100,\n        right: 50,\n        backgroundColor: \"darkgrey\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n        closeButton: true,\n        style: {\n          backgroundColor: \"#343a40\",\n          color: \"aliceblue\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"me-auto\",\n          children: \"Evolute RKI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n        children: \"User is successfully registered with User privileges.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-form\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"signup-main\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"form-labels\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"form-labels\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mb-3\",\n            controlId: \"formGridFullname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"form-labels\",\n              children: \"Fullname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Full Name\",\n              value: fullname,\n              onChange: e => setFullname(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            className: \"mb-3\",\n            controlId: \"formGridUsername\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"form-labels\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Username\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignupPage, \"ULTupSA5xPae11GjGkxBDTxH2rU=\");\n\n_c = SignupPage;\nexport default SignupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"sources":["C:/Users/varun/OneDrive/Documents/GitHub/evolute-rki/Client/src/Components/Admin/Dashboard/SignupPage.js"],"names":["React","useState","Row","Col","Button","Form","Toast","SignupPage","email","setEmail","fullname","setFullname","password","setPassword","username","setUsername","registered","setRegistered","showToast","setShowToast","handleSubmit","e","preventDefault","xhr","XMLHttpRequest","url","logParas","JSON","stringify","open","setRequestHeader","onreadystatechange","readyState","DONE","status","alert","send","toastToggle","position","top","right","backgroundColor","color","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport './SignupPage.css';\r\n\r\nfunction SignupPage() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [fullname, setFullname] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [registered, setRegistered] = useState(false);\r\n    const [showToast, setShowToast] = useState(true);\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        var url = \"http://localhost:8080/api/auth/signup\";\r\n        var logParas = JSON.stringify({\"name\": fullname, \"username\": username, \"email\": email, \"password\": password});\r\n        xhr.open(\"POST\", url, true);\r\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n        xhr.onreadystatechange = function() {\r\n            if(xhr.readyState === xhr.DONE) {\r\n                var status = xhr.status;\r\n\r\n                if(status === 0 || (status >= 200 && status < 400)) {\r\n                    setRegistered(true);\r\n                }\r\n                else {\r\n                    alert(\"Cannot register user\");\r\n                }\r\n            }\r\n        };\r\n        xhr.send(logParas);\r\n\r\n    }\r\n\r\n    const toastToggle = () => {\r\n        setShowToast(!showToast);\r\n        setRegistered(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {/* {registered === true && ( */}\r\n                  <Toast bg=\"dark\" delay=\"5000\" show={showToast} onClose={toastToggle} style={{position: \"fixed\", top: 100, right: 50, backgroundColor: \"darkgrey\"}}>\r\n                    <Toast.Header closeButton={true} style={{backgroundColor: \"#343a40\", color: \"aliceblue\"}}>\r\n                      <strong className=\"me-auto\">Evolute RKI</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>User is successfully registered with User privileges.</Toast.Body>\r\n                  </Toast>\r\n            {/* )} */}\r\n        <div className=\"signup-form\">\r\n            <Form className=\"signup-main\" onSubmit={handleSubmit}>\r\n                <Row className=\"mb-3\">\r\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label className=\"form-labels\">Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                        <Form.Label className=\"form-labels\">Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                    <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridFullname\">\r\n                        <Form.Label className=\"form-labels\">Fullname</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Full Name\" value={fullname} onChange={e => setFullname(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridUsername\">\r\n                        <Form.Label className=\"form-labels\">Username</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)}/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Button variant=\"dark\" type=\"submit\">\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignupPage\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\OneDrive\\\\Documents\\\\GitHub\\\\evolute-rki\\\\Client\\\\src\\\\Components\\\\Admin\\\\Dashboard\\\\SignupPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './SignupPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignupPage() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [fullname, setFullname] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    var xhr = new XMLHttpRequest();\n    var url = \"http://localhost:8080/api/auth/signup\";\n    var logParas = JSON.stringify({\n      \"name\": fullname,\n      \"username\": username,\n      \"email\": email,\n      \"password\": password\n    });\n    xhr.open(\"POST\", url, true);\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === xhr.DONE) {\n        var status = xhr.status;\n\n        if (status === 0 || status >= 200 && status < 400) {\n          alert(\"User successfully created with User privileges\");\n        } else {\n          alert(\"Cannot register user\");\n        }\n      }\n    };\n\n    xhr.send(logParas);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-form\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"signup-main\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"form-labels\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"form-labels\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          className: \"mb-3\",\n          controlId: \"formGridFullname\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"form-labels\",\n            children: \"Fullname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Full Name\",\n            value: fullname,\n            onChange: e => setFullname(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          className: \"mb-3\",\n          controlId: \"formGridUsername\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"form-labels\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignupPage, \"rsKqcXfxUbUkTYEzwMnVgs0RCmM=\");\n\n_c = SignupPage;\nexport default SignupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"sources":["C:/Users/varun/OneDrive/Documents/GitHub/evolute-rki/Client/src/Components/Admin/Dashboard/SignupPage.js"],"names":["React","useState","Row","Col","Button","Form","SignupPage","email","setEmail","fullname","setFullname","password","setPassword","username","setUsername","handleSubmit","e","preventDefault","xhr","XMLHttpRequest","url","logParas","JSON","stringify","open","setRequestHeader","onreadystatechange","readyState","DONE","status","alert","send","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './SignupPage.css';\r\n\r\nfunction SignupPage() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [fullname, setFullname] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [username, setUsername] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        var url = \"http://localhost:8080/api/auth/signup\";\r\n        var logParas = JSON.stringify({\"name\": fullname, \"username\": username, \"email\": email, \"password\": password});\r\n        xhr.open(\"POST\", url, true);\r\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n        xhr.onreadystatechange = function() {\r\n            if(xhr.readyState === xhr.DONE) {\r\n                var status = xhr.status;\r\n\r\n                if(status === 0 || (status >= 200 && status < 400)) {\r\n                    alert(\"User successfully created with User privileges\");\r\n                }\r\n                else {\r\n                    alert(\"Cannot register user\");\r\n                }\r\n            }\r\n        };\r\n        xhr.send(logParas);\r\n\r\n    }\r\n    return (\r\n        <div className=\"signup-form\">\r\n            <Form className=\"signup-main\" onSubmit={handleSubmit}>\r\n                <Row className=\"mb-3\">\r\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label className=\"form-labels\">Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                        <Form.Label className=\"form-labels\">Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                    <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridFullname\">\r\n                        <Form.Label className=\"form-labels\">Fullname</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Full Name\" value={fullname} onChange={e => setFullname(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridUsername\">\r\n                        <Form.Label className=\"form-labels\">Username</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)}/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Button variant=\"dark\" type=\"submit\">\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupPage\r\n"]},"metadata":{},"sourceType":"module"}